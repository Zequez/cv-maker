---
layout: layout.liquid
title: Ezequiel Schwartzman - Akvelon CV
meta:
  desc: Ezequiel Schwartzman - Akvelon CV
---

include _includes/helpers

mixin heading(title)
  div.uppercase.text-orange.text-center.font-bold.text-lg.sticky.bg-white.z-30(style="top: 2.25rem;")= title

main.container.max-w-screen-xl.mx-auto.font-serif(class="py-8 px-4 md:py-16 md:px-12")
  div.flex.justify-center
    img.h-12.mb-8(src="/akvelon.png")

  header.text-orange.font-semibold.text-center.whitespace-wrap.mb-2.sticky.top-0.bg-white.z-30(class="text-2xl md:text-3xl")
    span.whitespace-nowrap #{cv.name},
    |
    |
    span.whitespace-nowrap #{cv.title}
  .border-b-2.border-black.mb-2
  content.text-lg
    p.leading-tight.mb-4.text-justify= cv.summary
    +heading("Technical Summary")
    .text-center.mb-2.text-gray-500
      div Opacity = current interest in working with
      div Size = personal confidence level with it
      div(class="print:hidden") Click/Focus/Hover = details
    table.mb-8
      tbody
        each sectionContent, sectionName in cv.technicalSummary
          tr
            td.text-orange.font-bold.border.border-gray-300.px-2.block(class="sm:table-cell") #{sectionName}:
            td.border.border-gray-300.p-1.w-full.block(class="sm:table-cell")
              .flex.flex-wrap
                - sortedSectionContent = sortByConfidence(sectionContent)
                each info, itemName in sortedSectionContent
                  |
                  |
                  .relative(class="print:hidden")
                    button(class=`
                      group flex items-center justify-center h-10  m-1
                      text-base group relative text-white
                      rounded-md whitespace-nowrap cursor-pointer
                      focus:outline-none
                      ${!info.active ? "opacity-50" : ""}
                    ` data-fit-popup)
                      div(
                        style=`${pad(1, info.confidence)}`
                        class=`
                        h-1
                        bg-orange
                        group-focus:ring-4 ring-orange-500
                        flex items-center justify-center
                        ${info.confidence > .5 ? "rounded-md" : "rounded-sm text-xs"}
                        `
                      )
                        span(style="line-height: 0.66rem")=itemName
                      //- span.absolute.top-0.right-0.h-4.w-4.-mt-1.-mr-1.shadow-md.ring-1.ring-gray-200.rounded-md.bg-white.text-center.text-black(style="line-height: 0.35rem" class="group-focus:hidden")
                      //-   |...
                    span.hidden.absolute.text-black.z-50.whitespace-normal.p-4.shadow-lg.rounded-lg.pointer-events-none(
                      class="focused-sibling:block w-5/6 md:w-80 bg-white ring-4 ring-gray-300"
                      style="top: 50%; left: 50%; transform: translate(-50%, -50%);")
                      .font-bold= itemName
                      = info.summary
                  span.text-black.z-50.whitespace-normal.p-1.hidden(class="w-1/2 md:w-1/3 print:block")
                    .bg-white.p-4.rounded-lg.h-full.ring-2.ring-gray-200
                      .font-bold= itemName
                      = info.summary

    .page-break
    +heading("Open Source Work")
    table.mb-8
      tbody
        each project, projectName in cv.openSource
          - repos = cleanRepo(project.repo)
          tr
            td.text-orange.font-bold.border.border-gray-300.px-2.block(class="sm:table-cell")= projectName
            td.border.border-gray-300.p-1.w-full.block(class="sm:table-cell")
              .flex.flex-wrap
                span.underline.mr-2 Source:
                |
                |
                .flex.flex-wrap.-m-1
                  each repo in repos
                    a.text-orange.rounded-md.pr-2.m-1.whitespace-nowrap.cursor-pointer(href=repo.link target="_blank" class="focus:ring-4 focus:ring-orange focus:outline-none")
                      = repo.label
              div
                span.underline.mr-2 Date:
                span.italic #{project.from}#{project.to ? (project.to === project.from ? "" : `-${project.to}`) : " (active)"}
              .flex.flex-wrap
                span.underline.mr-2.whitespace-nowrap Tech stack:
                |
                |
                .flex.flex-wrap.-m-1
                  each tech in project.technologiesUsed
                    |
                    |
                    .text-base.bg-orange.bg-opacity-90.text-white.rounded-md.px-2.py-1.m-1.whitespace-nowrap
                      = tech
              div
                != project.summary.replace(/\n/g, "<br/>")

    .page-break
    +heading("Professional Experience")

    mixin company(work, workName)
      .mb-4
        .text-orange.font-bold
          = workName
          if work.isClient
            span.text-gray-300= ` (client)`
        .font-bold= work.role
        .italic
          = work.from
          = work.to && ` â€“ ${work.to}`
        if work.location
          .italic= work.location
        div
          = work.companyField
          if work.projects || work.project
            ul.ml-8.list-circle.list-inside.list-marker-orange
              for project in work.projects || [work.project]
                li= project
        div
          .underline Responsibilities:
          ul.ml-8.list-disc.list-inside.list-marker-orange
            for responsibility in work.responsibilities
              li= responsibility
        div
          span.underline Summary:
          |
          |
          = work.summary
        if work.technologiesUsed
          .underline Technologies Used:
          div.-mx-1.my-1.flex.flex-wrap
            each tech in work.technologiesUsed
              |
              |
              .text-base.bg-orange.bg-opacity-90.text-white.rounded-md.px-2.py-1.m-1.whitespace-nowrap
                = tech
        if work.subContracted
          .underline Subcontracted:
          .pl-8.border-l.pl-4
            for subWork, subWorkName in work.subContracted
              +company(subWork, subWorkName)

    each work, workName in cv.professionalExperience
      +company(work, workName)

    .page-break
    +heading("Education")
    for education in cv.education
      .text-center.mb-4
        .font-bold= education.label
        div=education.institution

    .page-break
    +heading("Certifications")
    for certification in cv.certifications
      a.flex.mb-4.justify-center.mx-auto.cursor-pointer(href=certification.link)
        .bg-gray-200.px-2.py-1.rounded-l-md= certification.label
        .px-2.py-1.bg-orange.text-white.rounded-r-md= certification.text

    footer.mt-12.text-center
      | Akvelon, Inc.

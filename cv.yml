name: Ezequiel Adrian Schwartzman
title: Web Ecosystem Wizard
summary: |
  Web ecosystem wizard with more than 10 years of experience building apps
  with a wide range of technologies of past and present for fun, love and profit.
  Mostly enjoys working on the front-end and open source code, while also
  experienced in full stack architectures, and deployment strategies.
  Looking to step in service as part of a diverse team to both help
  as best as he can with his technical skills to build positive apps. And on a
  personal level to nurture loving communication and teamwork.

technicalSummary:
  "Programming Languages":
    JavaScript: |
      I've used JavaScript since the beginnings of my journey, I know it inside out
      both on the browser ecosystem and inside Node
    TypeScript: |
      I've used it since 2016 on most of the projects I worked on. I always favor
      it over JavaScript if the option is available.
    Elm: |
      I started learning Elm on 2020 and I've used it for the open source projects
      The Hero Journey and Santuario. It's a joy to work with.
    Ruby: |
      Learned it along with Rails. I've mostly used it with Rails, but I also created
      a complex scraping library with it for GGFilter.
    CoffeeScript: |
      Found it cute when I learned Rails. I've used it on the Mapa de Transporte front end,
      and on HomeActions there was some code on CoffeeScript too.
    Python (just a little): |
      Found myself learning it for the Factorio client when building the official mod portal;
      I had made my version with Rails, and they liked the app, but they wanted Python
      so I just had to learn a whole new language and framework. Turned out alright, but
      then I never used it again.
    PHP (I just don't): |
      I started web development with this back in the day, but I mostly stopped after learning
      Rails. I made some web apps with it that are now forgotten in the internet archives, and the
      sources are nowhere to be found.
    Rust (just starting): |
      I started learning it and applied it on the Mandelbrot Sandbox app.
      I made a library to calculate the Mandelbrot fractal that would compile to
      web assembly, and afterwards I would use the blob along with React to
      make the full interface.
  Human Languages:
    "Spanish (native)": I'm from Argentina, so I was born into this language.
    "English (fluent)": |
      Learned English along with programming, and I've been using it
      professionally ever since. I'm fluent in both writing and spoken English,
      with a peculiar argentinian accent. Sometimes I have a hard time understanding
      with uncommon accents until my ear gets adjusted.
  Frontend Resources:
    "HTML / HAML / Pug / PostHTML": |
      It's common tech, and I've tried to make it less verbose; not much that I can say about it.
    "CSS / SASS / LESS / PostCSS / CSS Modules": |
      I've seen it evolve from having to make rounded borders with a jQuery plugin,
      through table layouts, through floating divs layouts, to using flexbox for everything and
      using box-shadow to make borders.
    jQuery: |
      I used jQuery up until 2015 when it stopped being useful for me.
    "React.js": |
      I've used React to build most of the UI since GGFilter on 2016;
      both for open source and for private clients. Would be my framework of choice
      for new JS/TS projects; although I would rather use Elm.
    Redux: |
      I've used Redux extensively on GGFilter; it's straightforward, but too verbose for
      my taste nowadays. Elm got the architecture right tho.
    MobX: |
      I've experimented with it on my personal website zequez.space to sync all the
      data from the background generator to the different UI elements. Nothing too complex.
    Tailwind: |
      Currently favored way to build user interface. I've used extensively
      on Covid Heroes, Zequez.Space, Santuario and the Mandelbrot Sandbox projects.
    Svelte: |
      I've learned the gist of it on some experimental projects that were abandoned, so I have
      nothing to show for it. The reactivity is an interesting concept.
    Mapbox: |
      Currently using it as part of the Santuario project tech stack; made a custom HTML element
      that takes images markers and bubbles up custom click events so I could use the library from Elm.
    "Web Assembly": |
      I've made a Rust library that compiles to Web Assembly to calculate a Mandelbrot fractal.
      I then used it on the Mandelbrot-sandbox project with an interface made with React.

  Frontend Tooling:
    Webpack: I've used it extensively on my most of my front end projects
    Snowpack: Currently my favored bundler; using it on Santuario
    StoryBook: I've used this library once as part of the GGFilter project but not very extensively.
    Gatsby: I've used it to build static websites; currently used on my personal website, zequez.space
    Eleventy: I've used it to build static websites; currently used as part of Santuario tooling.
    Jekyll: Used it for my personal blog at some point, but I wouldn't use it now; I favor Eleventy with Snowpack
    "NPM / YARN / PNPM": |
      I currently favor Yarn over NPM; it used to be faster, but now I couldn't really tell.
      PNPM is cool but some stuff often fails and I end up having to switch to something else.
  Backend:
    "Ruby on Rails": |
      Used it from the ground up on Mapa de Transporte, small clients in Avalith, GGFilter.
      And on HomeActions as an existing project maintainer.
      Created full stack apps and also just API. With e-commerce functionalities and all kinds of integrations.
      Deployed on Heroku.
    "Kinto": Recently started using it on the Santuario project as a general purpose backend; deploying on Scalingo.
    "Firebase": I've experimented with it on the Hero Journey project (plan on moving to Kinto); and as a backend for the Heroes Covid client.
  Databases:
    - MySQL: |
      Used it extensively while working with PHP when I first started doing web development;
      With PHPMyAdmin I felt very powerful.
    - PostgreSQL: |
      I've used this relational database
    - Holochain: |
      This is the future; I know a lot about the overall architecture,
      but on a technical level I just dipped my toes on "Getting started" projects

  Methodologies:
    "Agile": |
      I've used this methodology while working at Piksel and HomeActions, although never
      from a leading position.
    "Object-oriented programming":
    "Functional programming":
  Testing:
    "TDD": Got used to TDD while working with Ruby but I was never very consistent.
    "BDD": Did some testing with Cucumber but never really found it useful as a solo programmer
    "E2E": I just used Selenium driven by Ruby while working on Rails projects, but not very extensively, was too slow for my taste
    "Jest": I've used it on varied JS projects, but not extensively, and mostly for React.
  Operating Systems:
    Windows: I learned computers using this.
    Linux: I learned programming and command lines using this. I've used it as a personal OS but I no longer do.
    MacOS: I've been using a 2015 Macbook Pro with OSX since 2016, and before that I used a Hackintosh for a few years; mostly to work with Rails.
  Hosting:
    "IPFS": |
      Currently using it to deploy static a few of my JAMStack apps, such as Zequez.Space,
      Santuario and the Mandelbrot Sandbox.
    "Github Pages": |
      I've used it first for my original blog and I still use it when adding IPFS feels like a hassle.
      PlaytimeForTheBuck was also totally hosted on Github pages, although it was hacky and I felt bad
      about uploading all the scraped data there.
    "Netlify": |
      Used it for a time for my new personal website but migrated to IPFS. I also used it for
      the Heroes Covid client.
    "Heroku": I've deployed and managed multiple times Rails servers here
    "Scalingo": I've deployed a Kinto server with a Postgres DB that I'm using on my latest open source project, Santuario
    "AWS S3 Buckets": I've used them extensively on Ruby on Rails projects
    "AWS VM": I use an AWS VM as a personal backup server once; deprecated it.
    "Google Cloud VM": I spin up a CouchDB server on Google Cloud; never really used it.
    "Apache server with FTP access": |
      I used it back when I worked with PHP; never touched again since Rails on 2012.
      Could configure all the .htaccess and stuff like that.
  DevOps:
    "Docker (basic)": Can use and deploy containers; never created one from scratch.
    "Linux Servers with SSH": Can manage SSH keys and do anything remotely.
    "AWS (just once)": I use an AWS VM as a personal backup server once; deprecated it.
    "Google Cloud (just once)": I spin up a CouchDB server on Google Cloud; never really used it.
    "SendGrid": I've used this platform working on HomeActions with the Ruby library, and working for the CovidHeroes client with the JS library.
  Version Control:
    "Git": |
      I've used Git on most of the projects I've worked, and I can do anything needed
      that the tool is capable of. My first public repo on Github is from Dec 2011.
    "Svn": Used it once while working at Piksel, but I wouldn't use it again.
  Project Management:
    Jira: I've used it while working at Piksel and HomeActions.
    Trello: Started using it while working on the Factorio mods portal; continued using it for personal projects.
    Notion: I've been using it for a few months now for every kind of information management, included kanban board functionality.

openSource:
  -
    name: Santuario
    repo: https://github.com/Zequez/santuario
    from: 2021
    summary: |
      This is my main focus at the moment; it's not a single project but a sort of
      ecosystem that I'm building. The idea is to create tools for communities as if
      we all lived in a sanctuary; how would we organize? Currently made with Elm
      and experimenting with a Kinto backend for maximum flexibility
      with the intention to eventually migrate everything to Holochain.
    technologiesUsed:
      - JavaScript / Elm
      - Eleventy
      - Snowpack
      - CSS / Tailwind
      - HTML / Pug
      - Mapbox
      - Kinto
  -
    name: Zequez.space
    repo: https://github.com/Zequez/zequez-space
    from: 2020
    to: 2021
    summary: |
      My old website didn't reflect my current self so I made something flashy.
      Here I experimented with creating custom SVG at run time to generate
      a colorful background and other pretty things. It's made with Gatsby and
      React.
    technologiesUsed:
      - JavaScript
      - React
      - CSS / Tailwind
      - Gatsby
  -
    name: Mandelbrot Sandbox
    repo:
    from: 2020
    to: 2020
    summary: |
      I became fascinated by the Mandelbrot fractal and wanted to explore it myself
      so I wrote my own renderer so I could explore it. Was a fun way to learn Rust and
      dip my toes into Web Assembly.
    technologiesUsed:
      - React
      - Rust
      - Web Assembly
      - CSS / Tailwind
      - Webpack

  -
    name: The Hero Journey
    repo: https://github.com/Zequez/the-hero-journey
    year: 2020
    summary: |
      In my quest for self-growth I created an app to track the time I spend
      on each activity during the day. It was a fun way to learn Elm, but I never
      actually finished a proper backend, so it doesn't do backups yet. It's WIP.
    technologiesUsed:
      - Elm
      - CSS / Tailwind
  -
    name: Reddit Diet
    repo:
    from: 2018
    to: 2018
    summary: |
      Back when I felt Reddit was taking over my life I wanted to quit, but
      I didn't want to miss out on stuff, so I made an app to simplify reviewing
      the top posts of specific subreddits without having to constantly visit Reddit and check.

      I overtime naturally stopped using Reddit compulsively; the root of the problem
      was on my personal wellbeing rather than Reddit itself.
    technologiesUsed:
      - JavaScript
      - CSS / SASS
      - React
  -
    name: GGFilter
    repo:
      - https://github.com/Zequez/ggfilter-client
      - https://github.com/Zequez/ggfilter-scrapers
      - https://github.com/Zequez/ggfilter-server
    from: 2016
    to: 2018
    summary: |
      The spiritual successor of PlaytimeForTheBuck, but with a backend to hold
      all the data and a more robust front end, which was initially made with JavaScript
      and later ported to TypeScript. One of the most complex UI I made.
      The backend was a Rails app with a single endpoint as an API. The scrapers were made on Ruby.
    technologiesUsed:
      - JavaScript / TypeScript
      - React
      - CSS / SASS
  -
    name: Oculus Graph Sandbox
    repo: https://github.com/Zequez/oculus-graph-sandbox
    from: 2017
    to: 2017
    summary: |
      When I was working on the GGFilter scrapers to get the Oculus store data
      I found myself experimenting with a GraphQL endpoint so I built this tool
      so I could experiment easier.
    technologiesUsed:
      - TypeScript
      - React
      - CSS / SASS
  -
    name: Reddit Placebot
    repo: https://github.com/Zequez/reddit-placebot
    from: 2017
    to: 2017
    summary: |
      Back in 2017 during Reddit april fools there was the Reddit Place, and I created
      a script to automate clicking on certain points to paint images from a source file
      it also worked with multiple accounts simultaneously. It quickly became obsolete after
      Reddit Place ended.
    technologiesUsed:
      - JavaScript
  -
    name: Original Factorio Mods Portal
    repo: https://github.com/Zequez/FactorioMods
    year: 2015
    summary: |
      A web app to publish mods for Factorio, which at the time didn't have
      an official mod portal and everything was posted on the forum. I made it
      in Rails, and the the Factorio team contacted me to make an official version
      with an API (so it could be used from the game), but I had to port it to Python
      because no one there worked with Ruby, so I learned Python and Flask.
    technologiesUsed:
      - Ruby on Rails
      - CSS / SASS
      - JavaScript / CoffeeScript
      - Ruby
  -
    name: PlaytimeForTheBuck
    repo:
      - https://github.com/Zequez/ptb-frontend
      - https://github.com/Zequez/ptb-builder
      - https://github.com/Zequez/ptb-scrapper
    from: 2014
    to: 2015
    summary: |
      An application that scraped Steam games with a Ruby script, created a Json DB and loaded
      it in a front end made entirely with CoffeeScript to generate a sortable table
      that would let you filter games based on many conditions. It was hosted entirely
      on Github Pages as a static app.
    technologiesUsed:
      - CoffeeScript
      - CSS / SASS
      - Ruby
  -
    name: Mapa de Transporte
    repo: https://github.com/Zequez/mapa-de-transporte
    from: 2012
    to: 2013
    summary: Public transport map with sleek interface (for 2012) for my town.
    technologiesUsed:
      - CoffeeScript
      - CSS / SASS
      - Ruby
  - name: Target Shooter
    repo: https://github.com/Zequez/target-shooter
    from: 2011
    to: 2011
    summary: Little game I made to learn JS canvas and have fun
    technologiesUsed:
      - JavaScript
      - Canvas

professionalExperience:
  -
    client: Covid Heroes
    companyField: Social Media Marketing
    role: Freelance Web Developer
    from: Aug 2020
    to: Nov 2020
    summary: |
      They wanted to create a fantasy Covid-19 survivorship certification to try
      and market it to people through Facebook. I needed money.
    responsibilities:
      - Port a general design made on Photoshop to responsive CSS
      - Create a React tool to generate the certificates fully on the front using
        canvas allowing people to download it as an image or PDF
      - Serverless mailing with Firebase
      - Serverless billing with Stripe and some front-end magic
      - Maintain good communication with client about all features needed
      - Keep Trello board updated with progress
      - Make project estimation
      - Deploy project
      - Integrate Facebook Piksel and Google Analytics
    technologiesUsed:
      - React
      - Gatsby
      - CSS / Tailwind
      - Firebase
      - HTML
      - TypeScript
      - Netlify
      - Canvas
  -
    client: Factorio
    companyField: Videogame Development
    role: Freelance Web Developer
    from: Sep 2015
    to: Apr 2016
    summary: |
      After I did the Rails-based Factorio Mods Portal the company contacted me
      to create an official mod portal; but they asked me to do it in Python
      so I just learned Python and Flask and did it.

      Afterwards they decided to continue the work internally.
    responsibilities:
      - Keep Trello board with the project advances updated
      - Maintain communication with client about needed features
      - Rails app migration to Flask
      - App deployment
      - Billing for worked hours
    technologiesUsed:
      - Python
      - Flask
      - JavaScript
      - HTML
      - CSS
      - Heroku
  -
    company: Willdom
    companyField: Software Contractor
    role: Full Stack Web Developer
    from: Feb 2017
    to: Aug 2018
    summary: I just got hired for the Home Actions project
    responsibilities:
      - Report worked hours
      - Make updates about how the relationship with the company was going
    subContracted:
      -
        company: Home Actions
        companyField: Newsletter SASS for Real State Agents
        from: Feb 2017
        to: Aug 2018
        summary: |
          Worked with an existing monolithic Rails and a mailing microservice
          that used Sendgrid. I created new features and fixed bugs.
        responsibilities:
          - Pick up Jira tickets to work with
          - Maintain good communication QA team
          - Develop new features
          - Maintain old features
          - Update user interfaces
          - Fix strange bugs
        technologiesUsed:
          - JavaScript
          - CoffeeScript
          - React
          - Ruby on Rails
          - CSS
          - HTML
          - jQuery

  -
    company: Avalith
    companyField: Software Factory
    role: Full Stack Web Developer
    from: Aug 2012
    to: Jan 2015
    summary: Started working with them on a company project and then I worked
      mostly with specific clients in both PHP and Rails
    responsibilities:
      - Make projects estimations for clients
      - Build prototypes
      - Keep clients updated with progress
      - Deploy apps
      - Develop PHP and Rails apps
      - Interview new candidates
      - Consulting in the office for anything front-end related
    technologiesUsed:
      - JavaScript
      - CoffeeScript
      - Ruby on Rails
      - CSS
      - HTML
      - jQuery
      - PHP
    subContracted:
      -
        company: Band of Coders
        companyField: Software Contractor
        role: Front End Engineer
        from: Dec 2013
        to: Jan 2015
        summary: |
          I got here to work on the Piksel project.
        responsibilities:
            - Report worked hours
        subContracted:
          -
            company: Piksel
            companyField: Software Contractor
            location: USA, San Diego, 3 months
            role: Front End Engineer
            from: Dec 2013
            to: Jan 2015
            summary: |
              Worked on the front end team with AngularJS in both the desktop
              and mobile app of ATT U-Verse web app. I'm not sure if it still exist.
              Went to San Diego for 3 months for onboarding.
            responsibilities:
              - Report for daily standup
              - Participate in the Sprint planning process
              - Migrate legacy Knockout code to AngularJS
              - Create AngularJS components and add new features
              - Coordinate with backend devs for new API endpoints
              - Create regular pages with just HTML and CSS
              - Manage Jira tickets
            technologiesUsed:
              - JavaScript
              - AngularJS
              - Knockout (it was legacy code)
              - CSS
              - HTML
              - jQuery

education:
  -
    label: Software Engineering - 2nd Year Dropout
    institution: Universidad Nacional de Mar del Plata (UNMDP)
  -
    label: High School
    institution: Instituto Don Orione of Mar del Plata


certifications:
  -
    label: LinkedIn Profile
    text: linkedin.com/in/zequez
    link: https://www.linkedin.com/in/zequez
  -
    label: Github Profile
    text: Github.com/Zequez
    link: https://github.com/Zequez
  -
    label: Website / Portfolio
    text: zequez.space
    link: https://zequez.space
